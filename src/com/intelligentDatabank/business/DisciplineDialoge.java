/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.intelligentDatabank.business;

import com.intelligentDatabank.dao.DisciplineDAO;
import com.intelligentDatabank.dao.impl.DisciplineDAOImpl;
import com.intelligentDatabank.models.DisciplineModel;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akash
 */
public class DisciplineDialoge extends javax.swing.JDialog {

    private Integer disciplineId;

    /**
     * Creates new form DisciplineDialoge
     */
    public DisciplineDialoge(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateDisciplineTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnLabel = new javax.swing.JLabel();
        headingLabel = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        txtDescipline = new javax.swing.JTextField();
        lbRemarks = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRemarks = new javax.swing.JTextArea();
        tablePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        disciplineTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Discipline Form");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/intelligentDatabank/icons/update.png"))); // NOI18N
        btnUpdate.setText("UDATE DISCIPLINE");
        btnUpdate.setEnabled(false);
        btnUpdate.setOpaque(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 250, 230, 40));

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/intelligentDatabank/icons/save.png"))); // NOI18N
        btnAdd.setText("ADD DISCIPLINE");
        btnAdd.setOpaque(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 190, 230, 40));

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/intelligentDatabank/icons/delete.png"))); // NOI18N
        btnDelete.setText("DELETE DISCIPLINE");
        btnDelete.setEnabled(false);
        btnDelete.setOpaque(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 310, 230, 40));

        btnClear.setBackground(new java.awt.Color(255, 255, 255));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/intelligentDatabank/icons/reset.png"))); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.setOpaque(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 370, 230, 40));

        btnLabel.setBackground(new java.awt.Color(47, 79, 79));
        btnLabel.setOpaque(true);
        backgroundPanel.add(btnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 310, 580));

        headingLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        headingLabel.setForeground(new java.awt.Color(47, 79, 79));
        headingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLabel.setText("Discipline ");
        backgroundPanel.add(headingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 320, 50));

        lbName.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        lbName.setForeground(new java.awt.Color(47, 79, 79));
        lbName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbName.setText("Discipline :");
        backgroundPanel.add(lbName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 100, 30));

        txtDescipline.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        txtDescipline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDesciplineActionPerformed(evt);
            }
        });
        backgroundPanel.add(txtDescipline, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 88, 250, 40));

        lbRemarks.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        lbRemarks.setForeground(new java.awt.Color(47, 79, 79));
        lbRemarks.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbRemarks.setText("Remarks :");
        backgroundPanel.add(lbRemarks, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 90, 30));

        txtRemarks.setColumns(20);
        txtRemarks.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        txtRemarks.setRows(5);
        jScrollPane1.setViewportView(txtRemarks);

        backgroundPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 660, 100));

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 79, 79)), "DISCIPLINE DETAIL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic", 0, 14), new java.awt.Color(47, 79, 79))); // NOI18N
        tablePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        disciplineTable.setFont(new java.awt.Font("Yu Gothic", 0, 14)); // NOI18N
        disciplineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        disciplineTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        disciplineTable.setFocusable(false);
        disciplineTable.setRowHeight(20);
        disciplineTable.setSelectionBackground(new java.awt.Color(47, 79, 79));
        disciplineTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        disciplineTable.setShowVerticalLines(false);
        disciplineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disciplineTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(disciplineTable);

        tablePanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 810, 260));

        backgroundPanel.add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 830, 300));

        getContentPane().add(backgroundPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDesciplineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDesciplineActionPerformed
        txtRemarks.requestFocus();
    }//GEN-LAST:event_txtDesciplineActionPerformed

    private void disciplineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disciplineTableMouseClicked
        btnAdd.setEnabled(false);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);
        disciplineId = (Integer) disciplineTable.getValueAt(disciplineTable.getSelectedRow(), 0);
        DisciplineDAO disciplineDAO = new DisciplineDAOImpl();
        DisciplineModel discilineModel = disciplineDAO.getDisciplineWithId(disciplineId);
        txtDescipline.setText(discilineModel.getDisciplineName());
        txtRemarks.setText(discilineModel.getRemarks());
    }//GEN-LAST:event_disciplineTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(txtDescipline.getText().trim()!=null && txtRemarks.getText().trim()!=null) {
            DisciplineModel discilineModel = new DisciplineModel();
            discilineModel.setDisciplineId(disciplineId);
            discilineModel.setDisciplineName(txtDescipline.getText().trim());
            discilineModel.setRemarks(txtRemarks.getText().trim());
            DisciplineDAO disciplineDAO = new DisciplineDAOImpl();
            int row = disciplineDAO.updateDiscipline(discilineModel);
            if(row>0) {
                populateDisciplineTable();
                clearFields();
                btnAdd.setEnabled(true);
                btnDelete.setEnabled(false);
                btnUpdate.setEnabled(false);
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Record Not UPDATED!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(txtDescipline.getText().trim().isEmpty() == false) {
            DisciplineModel discilineModel = new DisciplineModel();
            discilineModel.setDisciplineName(txtDescipline.getText().trim());
            discilineModel.setRemarks(txtRemarks.getText().trim());
            DisciplineDAO disciplineDAO = new DisciplineDAOImpl();
            int row = disciplineDAO.addDiscipline(discilineModel);
            if(row>0) {
                populateDisciplineTable();
                clearFields();
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Record Not ADDED!");
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Please Fill Fields");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Integer confirm = JOptionPane.showConfirmDialog(rootPane, "Do you realy want to delete", "Delete", JOptionPane.YES_NO_OPTION);
        if(confirm == 0) {
            DisciplineModel discilineModel = new DisciplineModel();
            discilineModel.setDisciplineId(disciplineId);
            DisciplineDAO disciplineDAO = new DisciplineDAOImpl();
            int row = disciplineDAO.deleteDiscipline(discilineModel);
            if(row>0) {
                populateDisciplineTable();
                clearFields();
                btnAdd.setEnabled(true);
                btnDelete.setEnabled(false);
                btnUpdate.setEnabled(false);
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Record Not DELETED!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisciplineDialoge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisciplineDialoge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisciplineDialoge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisciplineDialoge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DisciplineDialoge dialog = new DisciplineDialoge(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel btnLabel;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable disciplineTable;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbRemarks;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTextField txtDescipline;
    private javax.swing.JTextArea txtRemarks;
    // End of variables declaration//GEN-END:variables

    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();
        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }
        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }
        return new DefaultTableModel(data, columnNames);
    }
    
    private void populateDisciplineTable() {  
        DisciplineDAO disciplineDAO = new DisciplineDAOImpl();
        ResultSet rs= disciplineDAO.getAllDisciplineResultSet();
        DefaultTableModel dtm = null;
        try {
            dtm = buildTableModel(rs);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        disciplineTable.setModel(dtm);
    }
    
    private void clearFields() {
        txtDescipline.setText(null);
        txtRemarks.setText(null);
    }
}
